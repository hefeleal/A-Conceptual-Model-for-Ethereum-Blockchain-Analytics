import os
import sys
import unittest

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../contract_analysis')))

import eth_util

class TestContractExtraction(unittest.TestCase):

    def test_1(self):
        contracts = [
        ("", "0x", ""),
        ("", "0xbe82fc6709ac792a7c39fed8adf50f41ff835abc", ""),
        ("0x6060604052341561000f57600080fd5b5b60008054600160a060020a03191633600160a060020a03161790555b5b61029e8061003c6000396000f300", "606060405236156100465763ffffffff60e060020a600035041663395ede4d811461004a57806383197ef01461006b5780638da5cb5b14610080578063e5225381146100af575b5b5b005b341561005557600080fd5b610046600160a060020a03600435166100c4565b005b341561007657600080fd5b6100466101df565b005b341561008b57600080fd5b61009361020b565b604051600160a060020a03909116815260200160405180910390f35b34156100ba57600080fd5b61004661021a565b005b60008054819033600160a060020a039081169116146100e257600080fd5b82915081600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561013c57600080fd5b6102c65a03f1151561014d57600080fd5b505050604051805160008054919350600160a060020a03808616935063a9059cbb92169084906040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156101bd57600080fd5b6102c65a03f115156101ce57600080fd5b505050604051805150505b5b505050565b60005433600160a060020a039081169116146101fa57600080fd5b600054600160a060020a0316ff5b5b565b600054600160a060020a031681565b60005433600160a060020a0390811691161461023557600080fd5b600054600160a060020a039081169030163180156108fc0290604051600060405180830381858888f19350505050151561020857600080fd5b5b5b5600", "a165627a7a7230582046378ee80aabd231215e1636373ac5eccd4f45b88b2a03d6fc70c9671e4802a00029"),
        ("0x6060604052341561000c57fe5b5b73ead6be34ce315940264519f250d8160f369fa5cd600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073e41d2489571d322189246dafa5ebde1f4699f498600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b6102e3806100c86000396000f300", "6060604052361561003f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301681a621461007b575b341561004757fe5b6100795b610076600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166100b1565b5b565b005b341561008357fe5b6100af600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100b1565b005b6000819050600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156102a657508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156101ed57fe5b60325a03f115156101fa57fe5b505050604051805190506000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561028e57fe5b60325a03f1151561029b57fe5b505050604051805190505b15156102b25760006000fd5b5b50505600", "a165627a7a7230582092f977cabf332175c2bc51ff892de2f8403bc139ac84e9e2eb78c75905f08a4f0029"),
        ("0x606060405260b28060106000396000f3", "60606040523615600a575b601d6000600060013411601f5760006024565b00", "5b600134035b91508134039050731c814ab24c152fa279f9ec864cc6321090b86d8c73ffffffffffffffffffffffffffffffffffffffff16826000366040518083838082843782019150509250505060006040518083038185876185025a03f15050604051733dfde2a4b3b44d52cd5e4aac60a4e79724d0680a9250839150600081818185876185025a03f150505050505056"),
        ("", "0xffffff39ffffff60", ""),
        ("", "0x60ffff39ffff60110044", ""),
        ("0x60ffff39ffff", "606000", "44")
        ]
        for sc in contracts:
            result = eth_util.extract_contract_code(sc[0] + sc[1] + sc[2])
            self.assertEqual(result[0], eth_util.prepend_0x(sc[0]))
            self.assertEqual(result[1], eth_util.prepend_0x(sc[1]))
            self.assertEqual(result[2], eth_util.prepend_0x(sc[2]))

if __name__ == '__main__':
    unittest.main()
